```cpp
/**
 * @file mycomplex.h
 * @brief Определение класса Complex для работы с комплексными числами.
 */

#ifndef MYCOMPLEX_H
#define MYCOMPLEX_H

#include <iostream>
#include <cmath>

/**
 * @class Complex
 * @brief Класс для представления комплексных чисел и выполнения операций с ними.
 */
class Complex {
public:
    /**
     * @brief Конструктор с параметрами.
     * @param aRe Действительная часть комплексного числа.
     * @param aIm Мнимая часть комплексного числа.
     */
    Complex(double aRe, double aIm);

    /**
     * @brief Конструктор копирования.
     * @param aRval Комплексное число, которое будет скопировано.
     */
    Complex(const Complex& aRval);

    /**
     * @brief Деструктор.
     */
    ~Complex();

    /**
     * @brief Установка новых значений для действительной и мнимой частей.
     * @param aRe Новое значение для действительной части.
     * @param aIm Новое значение для мнимой части.
     */
    void Set(double aRe, double aIm);

    /**
     * @brief Преобразование комплексного числа в его модуль.
     * @return Модуль комплексного числа.
     */
    operator double();

    /**
     * @brief Вычисление модуля комплексного числа.
     * @return Модуль комплексного числа.
     */
    double abs();

    /**
     * @brief Перегруженный оператор сложения комплексных чисел.
     * @param aRval Комплексное число, с которым производится сложение.
     * @return Результат сложения комплексных чисел.
     */
    Complex operator+(const Complex& aRval);

    /**
     * @brief Перегруженный оператор вычитания комплексных чисел.
     * @param aRval Комплексное число, которое вычитается.
     * @return Результат вычитания комплексных чисел.
     */
    Complex operator-(const Complex& aRval);

    /**
     * @brief Перегруженный оператор сложения комплексного числа с вещественным числом.
     * @param aval Вещественное число, с которым производится сложение.
     * @return Результат сложения.
     */
    Complex operator+(const double& aval);

    /**
     * @brief Перегруженный оператор вычитания вещественного числа из комплексного.
     * @param aRval Вещественное число, которое вычитается.
     * @return Результат вычитания.
     */
    Complex operator-(const double& aRval);

    /**
     * @brief Перегруженный оператор умножения комплексных чисел.
     * @param aRval Комплексное число, на которое умножается текущее.
     * @return Результат умножения комплексных чисел.
     */
    Complex operator*(const Complex& aRval);

    /**
     * @brief Перегруженный оператор умножения комплексного числа на вещественное.
     * @param aRval Вещественное число, на которое умножается комплексное.
     * @return Результат умножения комплексного числа на вещественное.
     */
    Complex operator*(const double& aRval);

    /**
     * @brief Перегруженный оператор деления комплексного числа на вещественное.
     * @param aRval Вещественное число, на которое делится комплексное.
     * @return Результат деления комплексного числа на вещественное.
     */
    Complex operator/(const double& aRval);

    /**
     * @brief Перегруженный оператор сложения с присваиванием комплексных чисел.
     * @param arval Комплексное число, которое прибавляется.
     * @return Ссылка на текущий объект.
     */
    Complex& operator+=(const Complex& arval);

    /**
     * @brief Перегруженный оператор вычитания с присваиванием комплексных чисел.
     * @param aRval Комплексное число, которое вычитается.
     * @return Ссылка на текущий объект.
     */
    Complex& operator-=(const Complex& aRval);

    /**
     * @brief Перегруженный оператор умножения с присваиванием комплексных чисел.
     * @param aRval Комплексное число, на которое умножается текущее.
     * @return Ссылка на текущий объект.
     */
    Complex& operator*=(const Complex& aRval);

    /**
     * @brief Перегруженный оператор сложения с присваиванием вещественного числа.
     * @param aRval Вещественное число, которое прибавляется.
     * @return Ссылка на текущий объект.
     */
    Complex& operator+=(const double& aRval);

    /**
     * @brief Перегруженный оператор вычитания с присваиванием вещественного числа.
     * @param aRval Вещественное число, которое вычитается.
     * @return Ссылка на текущий объект.
     */
    Complex& operator-=(const double& aRval);

    /**
     * @brief Перегруженный оператор умножения с присваиванием вещественного числа.
     * @param aRval Вещественное число, на которое умножается текущее.
     * @return Ссылка на текущий объект.
     */
    Complex& operator*=(const double& aRval);

    /**
     * @brief Перегруженный оператор деления с присваиванием вещественного числа.
     * @param aRval Вещественное число, на которое делится текущее.
     * @return Ссылка на текущий объект.
     */
    Complex& operator/=(